{"version":3,"file":"rete-area-plugin.min.js","sources":["src/content.ts","src/utils.ts","src/drag.ts","src/zoom.ts","src/area.ts","src/base.ts","src/connection-view.ts","src/elements-holder.ts","src/node-view.ts","src/extensions/shared/utils.ts","src/extensions/selectable.ts","src/extensions/zoom-at.ts","src/extensions/bounding-box.ts","src/extensions/order.ts","src/extensions/restrictor.ts","src/extensions/show-input-control.ts","src/extensions/snap.ts","src/index.ts"],"sourcesContent":["export class Content {\n  public holder: HTMLElement\n\n  constructor(private reordered: (target: HTMLElement) => Promise<unknown>) {\n    this.holder = document.createElement('div')\n    this.holder.style.transformOrigin = '0 0'\n  }\n\n  public getPointerFrom(event: MouseEvent) {\n    const { left, top } = this.holder.getBoundingClientRect()\n    const x = event.clientX - left\n    const y = event.clientY - top\n\n    return { x, y }\n  }\n\n  add(element: HTMLElement) {\n    this.holder.appendChild(element)\n  }\n\n  // eslint-disable-next-line no-undef\n  async reorder(target: HTMLElement, next: ChildNode | null) {\n    if (!this.holder.contains(target)) {\n      throw new Error(`content doesn't have 'target' for reordering`)\n    }\n    if (next !== null && !this.holder.contains(next)) {\n      throw new Error(`content doesn't have 'next' for reordering`)\n    }\n\n    this.holder.insertBefore(target, next)\n    await this.reordered(target)\n  }\n\n  remove(element: HTMLElement) {\n    this.holder.removeChild(element)\n  }\n}\n","import { Position, Size } from './types'\n\ntype PointerHandler = (event: PointerEvent) => void\ntype PointerListenerHandlers = {\n    down: PointerHandler\n    move: PointerHandler\n    up: PointerHandler\n}\n\nexport type PointerListener = { destroy: () => void }\n\n/**\n * listen to pointerdown, window's pointermove and pointerup events,\n * where last two not active before pointerdown triggered for performance reasons\n */\nexport function usePointerListener(element: HTMLElement, handlers: PointerListenerHandlers): PointerListener {\n  const move: PointerHandler = (event) => {\n    handlers.move(event)\n  }\n  const up: PointerHandler = (event) => {\n    window.removeEventListener('pointermove', move)\n    window.removeEventListener('pointerup', up)\n    window.removeEventListener('pointercancel', up)\n    handlers.up(event)\n  }\n  const down: PointerHandler = (event) => {\n    window.addEventListener('pointermove', move)\n    window.addEventListener('pointerup', up)\n    window.addEventListener('pointercancel', up)\n    handlers.down(event)\n  }\n\n  element.addEventListener('pointerdown', down)\n\n  return {\n    destroy() {\n      element.removeEventListener('pointerdown', down)\n      window.removeEventListener('pointermove', move)\n      window.removeEventListener('pointerup', up)\n      window.removeEventListener('pointercancel', up)\n    }\n  }\n}\n\n/**\n * Bounding box\n */\nconst min = (arr: number[]) => arr.length === 0 ? 0 : Math.min(...arr)\nconst max = (arr: number[]) => arr.length === 0 ? 0 : Math.max(...arr)\n\nexport function getBoundingBox(rects: ({ position: Position } & Size)[]) {\n  const left = min(rects.map(rect => rect.position.x))\n  const top = min(rects.map(rect => rect.position.y))\n  const right = max(rects.map(rect => rect.position.x + rect.width))\n  const bottom = max(rects.map(rect => rect.position.y + rect.height))\n\n  return {\n    left,\n    right,\n    top,\n    bottom,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n    center: {\n      x: (left + right) / 2,\n      y: (top + bottom) / 2\n    }\n  }\n}\n","import { Position } from './types'\nimport { PointerListener, usePointerListener } from './utils'\n\ntype Events = {\n  start: (e: PointerEvent) => void\n  translate: (x: number, y: number, e: PointerEvent) => void\n  drag: (e: PointerEvent) => void\n}\n\ntype Guards = {\n  down: (e: PointerEvent) => boolean\n  move: (e: PointerEvent) => boolean\n}\n\ntype DragConfig = {\n  getCurrentPosition: () => Position\n  getZoom: () => number\n}\n\n/**\n * Drag handler, used to handle dragging of the area and nodes. Can be extended to add custom behavior.\n */\nexport class Drag {\n  private pointerStart?: Position\n  private startPosition?: Position\n  private pointerListener!: PointerListener\n  protected config!: DragConfig\n  protected events!: Events\n  protected guards: Guards\n\n  constructor(guards?: Guards) {\n    this.guards = guards || {\n      down: e => !(e.pointerType === 'mouse' && e.button !== 0),\n      move: () => true\n    }\n  }\n\n  public initialize(element: HTMLElement, config: DragConfig, events: Events) {\n    this.config = config\n    this.events = events\n    element.style.touchAction = 'none'\n    this.pointerListener = usePointerListener(element, {\n      down: this.down,\n      move: this.move,\n      up: this.up\n    })\n  }\n\n  private down = (e: PointerEvent) => {\n    if (!this.guards.down(e)) return\n\n    e.stopPropagation()\n    this.pointerStart = { x: e.pageX, y: e.pageY }\n    this.startPosition = { ...this.config.getCurrentPosition() }\n\n    this.events.start(e)\n  }\n\n  private move = (e: PointerEvent) => {\n    if (!this.pointerStart || !this.startPosition) return\n    if (!this.guards.move(e)) return\n    e.preventDefault()\n\n    const delta = {\n      x: e.pageX - this.pointerStart.x,\n      y: e.pageY - this.pointerStart.y\n    }\n    const zoom = this.config.getZoom()\n    const x = this.startPosition.x + delta.x / zoom\n    const y = this.startPosition.y + delta.y / zoom\n\n    this.events.translate(x, y, e)\n  }\n\n  private up = (e: PointerEvent) => {\n    if (!this.pointerStart) return\n\n    delete this.pointerStart\n    this.events.drag(e)\n  }\n\n  public destroy() {\n    this.pointerListener.destroy()\n  }\n}\n","\n/**\n * Zoom source\n */\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick'\nexport type OnZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => void\n\n/**\n * Zoom class, used to handle zooming of the area. Can be extended to add custom behavior.\n * @internal\n */\nexport class Zoom {\n  protected previous: { cx: number, cy: number, distance: number } | null = null\n  protected pointers: PointerEvent[] = []\n  protected container!: HTMLElement\n  protected element!: HTMLElement\n  protected onzoom!: OnZoom\n\n  constructor(protected intensity: number) { }\n\n  public initialize(container: HTMLElement, element: HTMLElement, onzoom: OnZoom) {\n    this.container = container\n    this.element = element\n    this.onzoom = onzoom\n    this.container.addEventListener('wheel', this.wheel)\n    this.container.addEventListener('pointerdown', this.down)\n    this.container.addEventListener('dblclick', this.dblclick)\n\n    window.addEventListener('pointermove', this.move)\n    window.addEventListener('pointerup', this.up)\n    window.addEventListener('contextmenu', this.contextmenu)\n    window.addEventListener('pointercancel', this.up)\n  }\n\n  protected wheel = (e: WheelEvent) => {\n    e.preventDefault()\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const isNegative = e.deltaY < 0\n    const delta = isNegative ? this.intensity : - this.intensity\n    const ox = (left - e.clientX) * delta\n    const oy = (top - e.clientY) * delta\n\n    this.onzoom(delta, ox, oy, 'wheel')\n  }\n\n  private getTouches() {\n    const e = { touches: this.pointers }\n    const [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY]\n    const [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY]\n\n    const distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n\n    return {\n      cx: (x1 + x2) / 2,\n      cy: (y1 + y2) / 2,\n      distance\n    }\n  }\n\n  protected down = (e: PointerEvent) => {\n    this.pointers.push(e)\n  }\n\n  protected move = (e: PointerEvent) => {\n    this.pointers = this.pointers.map(p => p.pointerId === e.pointerId ? e : p)\n    if (!this.isTranslating()) return\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const { cx, cy, distance } = this.getTouches()\n\n    if (this.previous !== null && this.previous.distance > 0) {\n      const delta = distance / this.previous.distance - 1\n\n      const ox = (left - cx) * delta\n      const oy = (top - cy) * delta\n\n      this.onzoom(delta, ox - (this.previous.cx - cx), oy - (this.previous.cy - cy), 'touch')\n    }\n    this.previous = { cx, cy, distance }\n  }\n\n  protected contextmenu = () => {\n    this.pointers = []\n  }\n\n  protected up = (e: PointerEvent) => {\n    this.previous = null\n    this.pointers = this.pointers.filter(p => p.pointerId !== e.pointerId)\n  }\n\n  protected dblclick = (e: MouseEvent) => {\n    e.preventDefault()\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const delta = 4 * this.intensity\n\n    const ox = (left - e.clientX) * delta\n    const oy = (top - e.clientY) * delta\n\n    this.onzoom(delta, ox, oy, 'dblclick')\n  }\n\n  public isTranslating() { // is translating while zoom (works on multitouch)\n    return this.pointers.length >= 2\n  }\n\n  public destroy() {\n    this.container.removeEventListener('wheel', this.wheel)\n    this.container.removeEventListener('pointerdown', this.down)\n    this.container.removeEventListener('dblclick', this.dblclick)\n\n    window.removeEventListener('pointermove', this.move)\n    window.removeEventListener('pointerup', this.up)\n    window.removeEventListener('pointercancel', this.up)\n  }\n}\n","import { Content } from './content'\nimport { Drag } from './drag'\nimport { Position } from './types'\nimport { Zoom, ZoomSource } from './zoom'\n\nexport type Transform = Position & { k: number }\nexport type TranslateEventParams = { previous: Transform, position: Position }\nexport type ZoomEventParams = { previous: Transform, zoom: number, source?: ZoomSource }\n\ntype Events = {\n  zoomed: (params: ZoomEventParams) => Promise<unknown>\n  pointerDown: (position: Position, event: PointerEvent) => void\n  pointerMove: (position: Position, event: PointerEvent) => void\n  pointerUp: (position: Position, event: PointerEvent) => void\n  resize: (event: Event) => void\n  translated: (params: TranslateEventParams) => Promise<unknown>\n  reordered: (element: HTMLElement) => Promise<unknown>\n}\ntype Guards = {\n  translate: (params: TranslateEventParams) => Promise<unknown | boolean>\n  zoom: (params: ZoomEventParams) => Promise<unknown | boolean>\n}\n\nexport class Area {\n  public transform: Transform = { k: 1, x: 0, y: 0 }\n  public pointer: Position = { x: 0, y: 0 }\n  public content: Content\n\n  private zoomHandler: Zoom | null = null\n  private dragHandler: Drag | null = null\n\n  constructor(private container: HTMLElement, private events: Events, private guards: Guards) {\n    this.content = new Content(element => this.events.reordered(element))\n    this.content.holder.style.transformOrigin = '0 0'\n\n    this.setZoomHandler(new Zoom(0.1))\n    this.setDragHandler(new Drag())\n\n    this.container.addEventListener('pointerdown', this.pointerdown)\n    this.container.addEventListener('pointermove', this.pointermove)\n    window.addEventListener('pointerup', this.pointerup)\n    window.addEventListener('resize', this.resize)\n\n    container.appendChild(this.content.holder)\n    this.update()\n  }\n\n  private update() {\n    const { x, y, k } = this.transform\n\n    this.content.holder.style.transform = `translate(${x}px, ${y}px) scale(${k})`\n  }\n\n  /**\n   * Drag handler. Destroy previous drag handler if exists.\n   * @param drag drag handler\n   * @example area.area.setDragHandler(null) // disable drag\n   */\n  public setDragHandler(drag: Drag | null) {\n    if (this.dragHandler) this.dragHandler.destroy()\n    this.dragHandler = drag\n    if (this.dragHandler) this.dragHandler.initialize(\n      this.container,\n      {\n        getCurrentPosition: () => this.transform,\n        getZoom: () => 1\n      },\n      {\n        start: () => null,\n        translate: this.onTranslate,\n        drag: () => null\n      }\n    )\n  }\n\n  /**\n   * Set zoom handler. Destroy previous zoom handler if exists.\n   * @param zoom zoom handler\n   * @example area.area.setZoomHandler(null) // disable zoom\n   */\n  public setZoomHandler(zoom: Zoom | null) {\n    if (this.zoomHandler) this.zoomHandler.destroy()\n    this.zoomHandler = zoom\n    if (this.zoomHandler) this.zoomHandler.initialize(this.container, this.content.holder, this.onZoom)\n  }\n\n  public setPointerFrom(event: MouseEvent) {\n    const { x, y } = this.content.getPointerFrom(event)\n    const { k } = this.transform\n\n    this.pointer = { x: x / k, y: y / k }\n  }\n\n  private pointerdown = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerDown(this.pointer, event)\n  }\n\n  private pointermove = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerMove(this.pointer, event)\n  }\n\n  private pointerup = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerUp(this.pointer, event)\n  }\n\n  private resize = (event: Event) => {\n    this.events.resize(event)\n  }\n\n  private onTranslate = (x: number, y: number) => {\n    if (this.zoomHandler && this.zoomHandler.isTranslating()) return // lock translation while zoom on multitouch\n    this.translate(x, y)\n  }\n\n  private onZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => {\n    this.zoom(this.transform.k * (1 + delta), ox, oy, source)\n\n    this.update()\n  }\n\n  /**\n   * Change position of the area\n   * @param x desired x coordinate\n   * @param y desired y coordinate\n   * @returns true if the translation was successful, false otherwise\n   * @emits translate\n   * @emits translated\n   */\n  public async translate(x: number, y: number) {\n    type T = undefined | { data: TranslateEventParams }\n    const position = { x, y }\n    const result = await this.guards.translate({ previous: this.transform, position }) as T\n\n    if (!result) return false\n\n    this.transform.x = result.data.position.x\n    this.transform.y = result.data.position.y\n\n    this.update()\n\n    await this.events.translated(result.data)\n    return true\n  }\n\n  /**\n   * Change zoom level of the area\n   * @param zoom new zoom level\n   * @param ox x coordinate of the origin of the zoom\n   * @param oy y coordinate of the origin of the zoom\n   * @param source source of the zoom\n   * @returns true if the zoom was successful, false otherwise\n   * @emits zoom\n   * @emits zoomed\n   */\n  public async zoom(zoom: number, ox = 0, oy = 0, source?: ZoomSource) {\n    type T = undefined | { data: ZoomEventParams }\n    const k = this.transform.k\n    const result = await this.guards.zoom({ previous: this.transform, zoom, source }) as T\n\n    if (!result) return true\n\n    const d = (k - result.data.zoom) / ((k - zoom) || 1)\n\n    this.transform.k = result.data.zoom || 1\n    this.transform.x += ox * d\n    this.transform.y += oy * d\n\n    this.update()\n\n    await this.events.zoomed(result.data)\n    return false\n  }\n\n  public destroy() {\n    this.container.removeEventListener('pointerdown', this.pointerdown)\n    this.container.removeEventListener('pointermove', this.pointermove)\n    window.removeEventListener('pointerup', this.pointerup)\n    window.removeEventListener('resize', this.resize)\n    if (this.dragHandler) this.dragHandler.destroy()\n    if (this.zoomHandler) this.zoomHandler.destroy()\n    this.content.holder.innerHTML = ''\n  }\n}\n","import { BaseSchemes, ConnectionId, NodeId, Root, Scope } from 'rete'\n\nimport { NodeResizeEventParams, NodeTranslateEventParams } from './node-view'\nimport { GetRenderTypes, Position, RenderSignal } from './types'\n\ninterface NodeView {\n  element: HTMLElement\n  position: Position\n  translate(x: number, y: number): Promise<boolean>\n  resize(width: number, height: number): Promise<boolean>\n}\n\ninterface ConnectionView {\n  element: HTMLElement\n}\n\ninterface Content {\n  holder: HTMLElement\n  add(element: HTMLElement): void\n  // eslint-disable-next-line no-undef\n  reorder(target: HTMLElement, next: ChildNode | null): void\n  remove(element: HTMLElement): void\n}\n\ninterface Area {\n  pointer: Position\n  content: Content\n}\n\n/**\n * A union of all possible signals that can be emitted by any area plugin\n * @priority 10\n */\nexport type BaseArea<Schemes extends BaseSchemes> =\n  | { type: 'nodepicked', data: { id: string } }\n  | { type: 'nodedragged', data: Schemes['Node'] }\n  | { type: 'nodetranslate', data: { id: string } & NodeTranslateEventParams }\n  | { type: 'nodetranslated', data: { id: string } & NodeTranslateEventParams }\n  | { type: 'contextmenu', data: { event: MouseEvent, context: 'root' | Schemes['Node'] | Schemes['Connection'] } }\n  | { type: 'pointerdown', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\n  | { type: 'noderesize', data: { id: string } & NodeResizeEventParams }\n  | { type: 'noderesized', data: { id: string } & NodeResizeEventParams }\n  | RenderSignal<'node', { payload: Schemes['Node'] }>\n  | RenderSignal<'connection', { payload: Schemes['Connection'], start?: Position, end?: Position }>\n  | { type: 'unmount', data: { element: HTMLElement } }\n  | { type: 'reordered', data: { element: HTMLElement } }\n\n/**\n * Base abstract class for area plugins that provides a common interface\n * @abstract\n */\nexport abstract class BaseAreaPlugin<Schemes extends BaseSchemes, Signals> extends Scope<Signals, [Root<Schemes>]> {\n  public abstract nodeViews: Map<NodeId, NodeView>\n  public abstract connectionViews: Map<ConnectionId, ConnectionView>\n  public abstract area: Area\n\n  abstract addNodeView(connection: Schemes['Node']): NodeView\n  abstract removeNodeView(connection: NodeId): void\n  abstract addConnectionView(connection: Schemes['Connection']): ConnectionView\n  abstract removeConnectionView(connection: ConnectionId): void\n  abstract update(type: GetRenderTypes<Signals>, id: string): Promise<void | boolean | undefined>\n  abstract resize(id: NodeId, width: number, height: number): Promise<void | boolean | undefined>\n  abstract translate(id: NodeId, position: Position): Promise<void | boolean | undefined>\n  abstract destroy(): void\n}\n","\ntype Events = {\n  contextmenu: (event: MouseEvent) => void\n}\n\nexport class ConnectionView {\n  element: HTMLElement\n\n  constructor(events: Events) {\n    this.element = document.createElement('div')\n\n    this.element.style.position = 'absolute'\n    this.element.style.left = '0'\n    this.element.style.top = '0'\n    this.element.addEventListener('contextmenu', event => events.contextmenu(event))\n  }\n}\n","\nexport class ElementsHolder<E extends HTMLElement, Ctx extends { type: string, element: E, payload?: { id: string } }> {\n  views = new WeakMap<E, Ctx>()\n  viewsElements = new Map<`${string}_${string}`, E>()\n\n  public set(context: Ctx) {\n    const { element, type, payload } = context\n\n    if (payload?.id) {\n      this.views.set(element, context)\n      this.viewsElements.set(`${type}_${payload.id}`, element)\n    }\n  }\n\n  public get(type: string, id: string) {\n    const element = this.viewsElements.get(`${type}_${id}`)\n\n    return element && this.views.get(element)\n  }\n\n  public delete(element: E) {\n    const view = this.views.get(element)\n\n    if (view && view.payload?.id) {\n      this.views.delete(element)\n      this.viewsElements.delete(`${view.type}_${view.payload.id}`)\n    }\n  }\n}\n","import { Drag } from './drag'\nimport { Position, Size } from './types'\n\nexport type NodeTranslateEventParams = { position: Position, previous: Position }\nexport type NodeResizeEventParams = { size: Size }\n\ntype Events = {\n  picked: () => void\n  translated: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\n  dragged: () => void\n  contextmenu: (event: MouseEvent) => void\n  resized: (params: NodeResizeEventParams) => Promise<unknown | boolean>\n}\ntype Guards = {\n  resize: (params: NodeResizeEventParams) => Promise<unknown | boolean>\n  translate: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\n}\n\nexport class NodeView {\n  element: HTMLElement\n  position: Position\n  dragHandler: Drag\n\n  constructor(private getZoom: () => number, private events: Events, private guards: Guards) {\n    this.element = document.createElement('div')\n    this.element.style.position = 'absolute'\n    this.position = { x: 0, y: 0 }\n    this.translate(0, 0)\n\n    this.element.addEventListener('contextmenu', event => this.events.contextmenu(event))\n\n    this.dragHandler = new Drag()\n    this.dragHandler.initialize(\n      this.element,\n      {\n        getCurrentPosition: () => this.position,\n        getZoom: () => this.getZoom()\n      },\n      {\n        start: this.events.picked,\n        translate: this.translate,\n        drag: this.events.dragged\n      }\n    )\n  }\n\n  public translate = async (x: number, y: number) => {\n    type Params = undefined | { data: NodeTranslateEventParams }\n    const previous = { ...this.position }\n    const translation = await this.guards.translate({ previous, position: { x, y } }) as Params\n\n    if (!translation) return false\n\n    this.position = { ...translation.data.position }\n    this.element.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`\n\n    await this.events.translated({ position: this.position, previous })\n\n    return true\n  }\n\n  public resize = async (width: number, height: number) => {\n    const size = { width, height }\n\n    if (!(await this.guards.resize({ size }))) return false\n\n    const el = this.element.querySelector('*:not(span)')\n\n    if (!el || !(el instanceof HTMLElement)) return false\n\n    el.style.width = `${width}px`\n    el.style.height = `${height}px`\n\n    await this.events.resized({ size })\n\n    return true\n  }\n\n  public destroy() {\n    this.dragHandler.destroy()\n  }\n}\n","import { BaseAreaPlugin } from '../../base'\nimport { NodeView } from '../../node-view'\nimport { SchemesWithSizes } from './types'\n\nexport function getNodesRect<S extends SchemesWithSizes, K>(nodes: S['Node'][], views: BaseAreaPlugin<S, K>['nodeViews']) {\n  return nodes\n    .map(node => ({ view: views.get(node.id) as NodeView, node }))\n    .filter(item => item.view)\n    .map(({ view, node }) => {\n      const { width, height } = node\n\n      if (typeof width !== 'undefined' && typeof height !== 'undefined') {\n        return {\n          position: view.position,\n          width,\n          height\n        }\n      }\n\n      return {\n        position: view.position,\n        width: view.element.clientWidth,\n        height: view.element.clientHeight\n      }\n    })\n}\n","import { BaseSchemes, GetSchemes, NodeEditor, NodeId } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\ntype Schemes = GetSchemes<BaseSchemes['Node'] & { selected?: boolean }, any>\n\n/**\n * Selector's accumulate function, activated when the ctrl key is pressed\n */\nexport function accumulateOnCtrl() {\n  let pressed = false\n\n  function keydown(e: KeyboardEvent) {\n    if (e.key === 'Control') pressed = true\n  }\n  function keyup(e: KeyboardEvent) {\n    if (e.key === 'Control') pressed = false\n  }\n\n  document.addEventListener('keydown', keydown)\n  document.addEventListener('keyup', keyup)\n\n  return {\n    active() {\n      return pressed\n    },\n    destroy() {\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n    }\n  }\n}\n\nexport type SelectorEntity = { label: string, id: string, unselect(): void, translate(dx: number, dy: number): void }\n\n/**\n * Selector class. Used to collect selected entities (nodes, connections, etc.) and synchronize them (select, unselect, translate, etc.).\n * Can be extended to add custom functionality.\n */\nexport class Selector<E extends SelectorEntity> {\n  entities = new Map<string, E>()\n  pickId: string | null = null\n\n  isSelected(entity: Pick<E, 'label' | 'id'>) {\n    return this.entities.has(`${entity.label}_${entity.id}`)\n  }\n\n  add(entity: E, accumulate: boolean) {\n    if (!accumulate) this.unselectAll()\n    this.entities.set(`${entity.label}_${entity.id}`, entity)\n  }\n\n  remove(entity: Pick<E, 'label' | 'id'>) {\n    const id = `${entity.label}_${entity.id}`\n    const item = this.entities.get(id)\n\n    if (item) {\n      this.entities.delete(id)\n      item.unselect()\n    }\n  }\n\n  unselectAll() {\n    [...Array.from(this.entities.values())].forEach(item => this.remove(item))\n  }\n\n  translate(dx: number, dy: number) {\n    this.entities.forEach(item => !this.isPicked(item) && item.translate(dx, dy))\n  }\n\n  pick(entity: Pick<E, 'label' | 'id'>) {\n    this.pickId = `${entity.label}_${entity.id}`\n  }\n\n  release() {\n    this.pickId = null\n  }\n\n  isPicked(entity: Pick<E, 'label' | 'id'>) {\n    return this.pickId === `${entity.label}_${entity.id}`\n  }\n}\n\n/**\n * Selector factory, uses default Selector class\n * @returns Selector instance\n */\nexport function selector<E extends SelectorEntity>() {\n  return new Selector<E>()\n}\n\n/**\n * Accumulating interface, used to determine whether to accumulate entities on selection\n */\nexport type Accumulating = {\n  active(): boolean\n}\n\nexport type Selectable = ReturnType<typeof selector>\n\n/**\n * Selectable nodes extension. Adds the ability to select nodes in the area.\n * @param base BaseAreaPlugin instance\n * @param core Selectable instance\n * @param options.accumulating Accumulating interface\n * @listens nodepicked\n * @listens nodetranslated\n * @listens pointerdown\n * @listens pointermove\n * @listens pointerup\n */\nexport function selectableNodes<T>(base: BaseAreaPlugin<Schemes, T>, core: Selectable, options: { accumulating: Accumulating }) {\n  let editor: null | NodeEditor<Schemes> = null\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<Schemes>>(NodeEditor))\n\n  let twitch: null | number = 0\n\n  function selectNode(node: Schemes['Node']) {\n    if (!node.selected) {\n      node.selected = true\n      area.update('node', node.id)\n    }\n  }\n\n  function unselectNode(node: Schemes['Node']) {\n    if (node.selected) {\n      node.selected = false\n      area.update('node', node.id)\n    }\n  }\n  /**\n   * Select node programmatically\n   * @param nodeId Node id\n   * @param accumulate Whether to accumulate nodes on selection\n   */\n  function add(nodeId: NodeId, accumulate: boolean) {\n    const node = getEditor().getNode(nodeId)\n\n    if (!node) return\n\n    core.add({\n      label: 'node',\n      id: node.id,\n      translate(dx, dy) {\n        const view = area.nodeViews.get(node.id)\n        const current = view?.position\n\n        if (current) {\n          view.translate(current.x + dx, current.y + dy)\n        }\n      },\n      unselect() {\n        unselectNode(node)\n      }\n    }, accumulate)\n    selectNode(node)\n  }\n  /**\n   * Unselect node programmatically\n   * @param nodeId Node id\n   */\n  function remove(nodeId: NodeId) {\n    core.remove({ id: nodeId, label: 'node' })\n  }\n\n  // eslint-disable-next-line max-statements, complexity\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'nodepicked') {\n      const pickedId = context.data.id\n      const accumulate = options.accumulating.active()\n\n      core.pick({ id: pickedId, label: 'node' })\n      twitch = null\n      add(pickedId, accumulate)\n    } else if (context.type === 'nodetranslated') {\n      const { id, position, previous } = context.data\n      const dx = position.x - previous.x\n      const dy = position.y - previous.y\n\n      if (core.isPicked({ id, label: 'node' })) core.translate(dx, dy)\n    } else if (context.type === 'pointerdown') {\n      twitch = 0\n    } else if (context.type === 'pointermove') {\n      if (twitch !== null) twitch++\n    } else if (context.type === 'pointerup') {\n      if (twitch !== null && twitch < 4) {\n        core.unselectAll()\n      }\n      twitch = null\n    }\n    return context\n  })\n\n  return {\n    select: add,\n    unselect: remove\n  }\n}\n\n","import { NodeEditor } from 'rete'\n\nimport { AreaPlugin } from '..'\nimport { getBoundingBox } from '../utils'\nimport { NodeRef, SchemesWithSizes } from './shared/types'\nimport { getNodesRect } from './shared/utils'\n\n/**\n * Zoom extension parameters\n */\nexport type Params = {\n  /** Set gap between nodes and the viewport border */\n  scale?: number\n}\n\n/**\n * Zooms the area to fit the given nodes\n * @param plugin The area plugin\n * @param nodes The nodes to fit\n * @param params The zoom parameters\n */\n// eslint-disable-next-line max-statements, max-len\nexport async function zoomAt<Schemes extends SchemesWithSizes, K>(plugin: AreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[], params?: Params) {\n  const { scale = 0.9 } = params || {}\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n  const boundingBox = getBoundingBox(rects)\n  const [w, h] = [plugin.container.clientWidth, plugin.container.clientHeight]\n  const [kw, kh] = [w / boundingBox.width, h / boundingBox.height]\n  const k = Math.min(kh * scale, kw * scale, 1)\n\n  plugin.area.transform.x = w / 2 - boundingBox.center.x * k\n  plugin.area.transform.y = h / 2 - boundingBox.center.y * k\n  await plugin.area.zoom(k, 0, 0)\n}\n","import { BaseSchemes, NodeEditor } from 'rete'\n\nimport { BaseAreaPlugin } from '../base'\nimport { getBoundingBox as getBBox } from '../utils'\nimport { NodeRef } from './shared/types'\nimport { getNodesRect } from './shared/utils'\n\n/**\n * Get the bounding box of the given nodes\n * @param plugin The area plugin\n * @param nodes The nodes to get the bounding box of\n * @returns The bounding box\n */\nexport function getBoundingBox<Schemes extends BaseSchemes, K>(plugin: BaseAreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[]) {\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n\n  return getBBox(rects)\n}\n","import { BaseSchemes } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\n/**\n * Simple nodes order extension\n * @param base The base area plugin\n * @listens nodepicked\n * @listens connectioncreated\n */\nexport function simpleNodesOrder<Schemes extends BaseSchemes, T>(base: BaseAreaPlugin<Schemes, T>) {\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'nodepicked') {\n      const view = area.nodeViews.get(context.data.id)\n      const { content } = area.area\n\n      if (view) {\n        content.reorder(view.element, null)\n      }\n    }\n    if (context.type === 'connectioncreated') {\n      const view = area.connectionViews.get(context.data.id)\n      const { content } = area.area\n\n      if (view) {\n        content.reorder(view.element, content.holder.firstChild)\n      }\n    }\n    return context\n  })\n}\n","import { BaseSchemes } from 'rete'\n\nimport { AreaPlugin } from '..'\nimport { Position } from '../types'\n\ntype ScaleRange = { min: number, max: number }\ntype TranslateRange = { left: number, top: number, right: number, bottom: number }\n\n/**\n * Restrictor extension parameters\n */\nexport type Params = {\n  /** The scaling range */\n  scaling?: ScaleRange | (() => ScaleRange) | boolean\n  /** The translation range */\n  translation?: TranslateRange | (() => TranslateRange) | boolean\n}\n\n/**\n * Restrictor extension. Restricts the area zoom and position\n * @param plugin The area plugin\n * @param params The restrictor parameters\n * @listens zoom\n * @listens zoomed\n * @listens translated\n */\nexport function restrictor<Schemes extends BaseSchemes, K>(plugin: AreaPlugin<Schemes, K>, params?: Params) {\n  const scaling = params?.scaling\n    ? params.scaling === true ? { min: 0.1, max: 1 } : params.scaling\n    : false\n  const translation = params?.translation\n    ? params.translation === true ? { left: 0, top: 0, right: 1000, bottom: 1000 } : params.translation\n    : false\n\n  function restrictZoom(zoom: number) {\n    if (!scaling) throw new Error('scaling param isnt defined')\n    const { min, max } = typeof scaling === 'function' ? scaling() : scaling\n\n    if (zoom < min) {\n      return min\n    } else if (zoom > max) {\n      return max\n    }\n    return zoom\n  }\n\n  // eslint-disable-next-line max-statements\n  function restrictPosition(position: Position): Position {\n    if (!translation) throw new Error('translation param isnt defined')\n    const nextPosition = { ...position }\n    const { left, top, right, bottom } = typeof translation === 'function'\n      ? translation()\n      : translation\n\n    if (nextPosition.x < left) {\n      nextPosition.x = left\n    }\n    if (nextPosition.x > right) {\n      nextPosition.x = right\n    }\n    if (nextPosition.y < top) {\n      nextPosition.y = top\n    }\n    if (nextPosition.y > bottom) {\n      nextPosition.y = bottom\n    }\n\n    return nextPosition\n  }\n\n  plugin.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (scaling && context.type === 'zoom') {\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          zoom: restrictZoom(context.data.zoom)\n        }\n      }\n    }\n    if (translation && context.type === 'zoomed') {\n      const position = restrictPosition(plugin.area.transform)\n\n      plugin.area.translate(position.x, position.y)\n    }\n    if (translation && context.type === 'translate') {\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          position: restrictPosition(context.data.position)\n        }\n      }\n    }\n    return context\n  })\n}\n","import { BaseSchemes, ClassicPreset as Classic, GetSchemes, NodeEditor } from 'rete'\n\nimport { BaseAreaPlugin } from '../base'\n\ntype Scheme = GetSchemes<Classic.Node, Classic.Connection<Classic.Node, Classic.Node>>\ntype Visible<S extends Scheme> = (props: { hasAnyConnection: boolean, input: NonNullable<S['Node']['inputs'][string]> }) => boolean\n\n/**\n * Show input control extension. It will show the input's control when there is no connection and hide it when there is a connection.\n * @param area The base area plugin\n * @param visible The visible function\n * @listens connectioncreated\n * @listens connectionremoved\n */\nexport function showInputControl<S extends Scheme>(area: BaseAreaPlugin<BaseSchemes, any>, visible?: Visible<S>) {\n  let editor: null | NodeEditor<S> = null\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<S>>(NodeEditor))\n\n  function updateInputControlVisibility(target: string, targetInput: string) {\n    const node = getEditor().getNode(target)\n\n    if (!node) return\n\n    const input = (node.inputs as Record<string, S['Node']['inputs'][string] | undefined>)[targetInput]\n\n    if (!input) throw new Error('cannot find input')\n\n    const previous = input.showControl\n    const connections = getEditor().getConnections()\n    const hasAnyConnection = Boolean(connections.find(connection => {\n      return connection.target === target && connection.targetInput === targetInput\n    }))\n\n    input.showControl = visible ? visible({ hasAnyConnection, input }) : !hasAnyConnection\n\n    if (input.showControl !== previous) {\n      area.update('node', node.id)\n    }\n  }\n\n  area.addPipe(context => {\n    if (context.type === 'connectioncreated' || context.type === 'connectionremoved') {\n      updateInputControlVisibility(context.data.target, context.data.targetInput)\n    }\n    return context\n  })\n}\n","import { BaseSchemes } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\n/**\n * Snap grid extension parameters\n */\nexport type Params = {\n  /** The grid size */\n  size?: number\n  /** Whether to snap on node drag */\n  dynamic?: boolean\n}\n\n/**\n * Snap grid extension\n * @param base The base area plugin\n * @param params The snap parameters\n * @listens nodetranslate\n * @listens nodedragged\n */\nexport function snapGrid<Schemes extends BaseSchemes, K>(base: BaseAreaPlugin<Schemes, K>, params?: Params) {\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  const size = typeof params?.size === 'undefined' ? 16 : params.size\n  const dynamic = typeof params?.dynamic === 'undefined' ? true : params.dynamic\n\n  function snap(value: number) {\n    return Math.round(value / size) * size\n  }\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (dynamic && context.type === 'nodetranslate') {\n      const { position } = context.data\n      const x = snap(position.x)\n      const y = snap(position.y)\n\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          position: { x, y }\n        }\n      }\n    }\n    if (!dynamic && context.type === 'nodedragged') {\n      const view = area.nodeViews.get(context.data.id)\n\n      if (view) {\n        const { x, y } = view.position\n\n        view.translate(snap(x), snap(y))\n      }\n    }\n    return context\n  })\n}\n","import { BaseSchemes, ConnectionId, NodeId, Root } from 'rete'\n\nimport { Area, TranslateEventParams, ZoomEventParams } from './area'\nimport { BaseArea, BaseAreaPlugin } from './base'\nimport { ConnectionView } from './connection-view'\nimport { ElementsHolder } from './elements-holder'\nimport { NodeView } from './node-view'\nimport { GetRenderTypes, Position, RenderMeta } from './types'\n\nexport { Area } from './area'\nexport type { BaseArea } from './base'\nexport { BaseAreaPlugin } from './base'\nexport { Drag } from './drag'\nexport * as AreaExtensions from './extensions'\nexport { NodeView } from './node-view'\nexport type { RenderSignal } from './types'\nexport type { PointerListener } from './utils'\nexport { usePointerListener } from './utils'\nexport { Zoom } from './zoom'\n\n/**\n * A union of all possible signals that can be emitted by the area\n * @priority 9\n */\nexport type Area2D<Schemes extends BaseSchemes> =\n  | BaseArea<Schemes>\n  | { type: 'translate', data: TranslateEventParams }\n  | { type: 'translated', data: TranslateEventParams }\n  | { type: 'zoom', data: ZoomEventParams }\n  | { type: 'zoomed', data: ZoomEventParams }\n  | { type: 'resized', data: { event: Event } }\n\nexport type Area2DInherited<Schemes extends BaseSchemes, ExtraSignals = never> = [Area2D<Schemes> | ExtraSignals, Root<Schemes>]\n\n/**\n * A plugin that provides a 2D area for nodes and connections\n * @priority 8\n * @emits render\n * @emits rendered\n * @emits unmount\n * @listens nodecreated\n * @listens noderemoved\n * @listens connectioncreated\n * @listens connectionremoved\n */\nexport class AreaPlugin<Schemes extends BaseSchemes, ExtraSignals = never> extends BaseAreaPlugin<Schemes, Area2D<Schemes> | ExtraSignals> {\n  public nodeViews = new Map<NodeId, NodeView>()\n  public connectionViews = new Map<ConnectionId, ConnectionView>()\n  public area: Area\n  private elements = new ElementsHolder<HTMLElement, Extract<Area2D<Schemes>, { type: 'render' }>['data'] & RenderMeta>()\n\n  constructor(public container: HTMLElement) {\n    super('area')\n    container.style.overflow = 'hidden'\n    container.addEventListener('contextmenu', this.onContextMenu)\n\n    // eslint-disable-next-line max-statements\n    this.addPipe(context => {\n      if (!context || !(typeof context === 'object' && 'type' in context)) return context\n      if (context.type === 'nodecreated') {\n        this.addNodeView(context.data)\n      }\n      if (context.type === 'noderemoved') {\n        this.removeNodeView(context.data.id)\n      }\n      if (context.type === 'connectioncreated') {\n        this.addConnectionView(context.data)\n      }\n      if (context.type === 'connectionremoved') {\n        this.removeConnectionView(context.data.id)\n      }\n      if (context.type === 'render') {\n        this.elements.set(context.data)\n      }\n      if (context.type === 'unmount') {\n        this.elements.delete(context.data.element)\n      }\n      return context\n    })\n    this.area = new Area(\n      container,\n      {\n        zoomed: params => this.emit({ type: 'zoomed', data: params }),\n        pointerDown: (position, event) => this.emit({ type: 'pointerdown', data: { position, event } }),\n        pointerMove: (position, event) => this.emit({ type: 'pointermove', data: { position, event } }),\n        pointerUp: (position, event) => this.emit({ type: 'pointerup', data: { position, event } }),\n        resize: event => this.emit({ type: 'resized', data: { event } }),\n        translated: params => this.emit({ type: 'translated', data: params }),\n        reordered: element => this.emit({ type: 'reordered', data: { element } })\n      },\n      {\n        translate: params => this.emit({ type: 'translate', data: params }),\n        zoom: params => this.emit({ type: 'zoom', data: params })\n      }\n    )\n  }\n\n  private onContextMenu = (event: MouseEvent) => {\n    this.emit({ type: 'contextmenu', data: { event, context: 'root' } })\n  }\n\n  public addNodeView(node: Schemes['Node']) {\n    const { id } = node\n    const view = new NodeView(\n      () => this.area.transform.k,\n      {\n        picked: () => this.emit({ type: 'nodepicked', data: { id } }),\n        translated: data => this.emit({ type: 'nodetranslated', data: { id, ...data } }),\n        dragged: () => this.emit({ type: 'nodedragged', data: node }),\n        contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: node } }),\n        resized: ({ size }) => this.emit({ type: 'noderesized', data: { id: node.id, size } })\n      },\n      {\n        translate: data => this.emit({ type: 'nodetranslate', data: { id, ...data } }),\n        resize: ({ size }) => this.emit({ type: 'noderesize', data: { id: node.id, size } })\n      }\n    )\n\n    this.nodeViews.set(id, view)\n    this.area.content.add(view.element)\n\n    this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'node', payload: node }\n    })\n\n    return view\n  }\n\n  public removeNodeView(id: NodeId) {\n    const view = this.nodeViews.get(id)\n\n    if (view) {\n      this.emit({ type: 'unmount', data: { element: view.element } })\n      this.nodeViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  public addConnectionView(connection: Schemes['Connection']) {\n    const view = new ConnectionView({\n      contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: connection } })\n    })\n\n    this.connectionViews.set(connection.id, view)\n    this.area.content.add(view.element)\n\n    this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'connection', payload: connection }\n    })\n\n    return view\n  }\n\n  public removeConnectionView(id: ConnectionId) {\n    const view = this.connectionViews.get(id)\n\n    if (view) {\n      this.emit({ type: 'unmount', data: { element: view.element } })\n      this.connectionViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  /**\n   * Force update rendered element by id (node, connection, etc.)\n   * @param type Element type\n   * @param id Element id\n   * @emits render\n   */\n  public async update(type: GetRenderTypes<Area2D<Schemes>> | GetRenderTypes<ExtraSignals>, id: string) {\n    const data = this.elements.get(type, id)\n\n    if (data) await this.emit({ type: 'render', data } as Area2D<Schemes>)\n  }\n\n  /**\n   * Resize node\n   * @param id Node id\n   * @param width Desired width\n   * @param height Desired height\n   */\n  public async resize(id: NodeId, width: number, height: number) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.resize(width, height)\n  }\n\n  /**\n   * Translate node to position\n   * @param id Node id\n   * @param position Position\n   */\n  public async translate(id: NodeId, { x, y }: Position) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.translate(x, y)\n  }\n\n  /**\n   * Destroy all views and remove all event listeners\n   */\n  public destroy() {\n    this.container.removeEventListener('contextmenu', this.onContextMenu)\n    Array.from(this.connectionViews.keys()).forEach(id => this.removeConnectionView(id))\n    Array.from(this.nodeViews.keys()).forEach(id => this.removeNodeView(id))\n    this.area.destroy()\n  }\n}\n"],"names":["Content","reordered","_classCallCheck","this","holder","document","createElement","style","transformOrigin","_reorder","_createClass","key","value","event","_this$holder$getBound","getBoundingClientRect","left","top","x","clientX","y","clientY","element","appendChild","_asyncToGenerator","_regeneratorRuntime","mark","_callee","target","next","wrap","_context","prev","contains","Error","insertBefore","stop","_x","_x2","apply","arguments","removeChild","usePointerListener","handlers","move","up","window","removeEventListener","down","addEventListener","destroy","min","arr","length","Math","_toConsumableArray","max","getBoundingBox","rects","map","rect","position","right","width","bottom","height","abs","center","Drag","guards","_this","_defineProperty","e","stopPropagation","pointerStart","pageX","pageY","startPosition","_objectSpread","config","getCurrentPosition","events","start","preventDefault","delta","zoom","getZoom","translate","drag","pointerType","button","touchAction","pointerListener","Zoom","intensity","_this$element$getBoun","deltaY","ox","oy","onzoom","pointers","push","p","pointerId","isTranslating","_this$element$getBoun2","_this$getTouches","getTouches","cx","cy","distance","previous","filter","_this$element$getBoun3","container","wheel","dblclick","contextmenu","touches","_ref","x1","y1","_ref2","x2","y2","sqrt","pow","Area","k","setPointerFrom","pointerDown","pointer","pointerMove","pointerUp","resize","zoomHandler","source","transform","update","content","setZoomHandler","setDragHandler","pointerdown","pointermove","pointerup","_zoom2","_translate","_this$transform","concat","_this2","dragHandler","initialize","onTranslate","onZoom","_this$content$getPoin","getPointerFrom","result","sent","abrupt","data","translated","_callee2","d","_args2","_context2","undefined","zoomed","_x3","innerHTML","BaseAreaPlugin","_Scope","_inherits","_super","_createSuper","Scope","ConnectionView","ElementsHolder","WeakMap","Map","context","type","payload","id","views","set","viewsElements","get","_view$payload","view","NodeView","translation","size","el","querySelector","HTMLElement","resized","_x4","picked","dragged","getNodesRect","nodes","node","item","clientWidth","clientHeight","Selector","entity","entities","has","label","accumulate","unselectAll","unselect","Array","from","values","forEach","remove","dx","dy","isPicked","pickId","_zoomAt","plugin","params","_ref$scale","scale","editor","list","boundingBox","w","h","kw","kh","parentScope","NodeEditor","_typeof","getNode","nodeViews","area","getBBox","base","addPipe","reorder","connectionViews","firstChild","scaling","restrictZoom","restrictPosition","nextPosition","pressed","keydown","keyup","active","core","options","twitch","add","nodeId","current","selected","unselectNode","selectNode","pickedId","accumulating","pick","_context$data","select","visible","getEditor","targetInput","input","inputs","showControl","connections","getConnections","hasAnyConnection","Boolean","find","connection","updateInputControlVisibility","dynamic","snap","round","_view$position","AreaPlugin","_BaseAreaPlugin","_resize","_update","_assertThisInitialized","call","emit","overflow","onContextMenu","addNodeView","removeNodeView","addConnectionView","removeConnectionView","elements","_this3","_x5","_callee3","_ref3","_context3","_x6","_x7","_this4","keys"],"mappings":"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"}