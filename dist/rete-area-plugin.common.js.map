{"version":3,"file":"rete-area-plugin.common.js","sources":["src/content.ts","src/utils.ts","src/drag.ts","src/zoom.ts","src/area.ts","src/base.ts","src/connection-view.ts","src/elements-holder.ts","src/node-view.ts","src/extensions/shared/utils.ts","src/extensions/bounding-box.ts","src/extensions/order.ts","src/extensions/restrictor.ts","src/extensions/selectable.ts","src/extensions/show-input-control.ts","src/extensions/snap.ts","src/extensions/zoom-at.ts","src/extensions/index.ts","src/index.ts"],"sourcesContent":["export class Content {\n  public holder: HTMLElement\n\n  constructor(private reordered: (target: HTMLElement) => Promise<unknown>) {\n    this.holder = document.createElement('div')\n    this.holder.style.transformOrigin = '0 0'\n  }\n\n  public getPointerFrom(event: MouseEvent) {\n    const { left, top } = this.holder.getBoundingClientRect()\n    const x = event.clientX - left\n    const y = event.clientY - top\n\n    return { x, y }\n  }\n\n  add(element: HTMLElement) {\n    this.holder.appendChild(element)\n  }\n\n  // eslint-disable-next-line no-undef\n  async reorder(target: HTMLElement, next: ChildNode | null) {\n    if (!this.holder.contains(target)) {\n      throw new Error(`content doesn't have 'target' for reordering`)\n    }\n    if (next !== null && !this.holder.contains(next)) {\n      throw new Error(`content doesn't have 'next' for reordering`)\n    }\n\n    this.holder.insertBefore(target, next)\n    await this.reordered(target)\n  }\n\n  remove(element: HTMLElement) {\n    this.holder.removeChild(element)\n  }\n}\n","import { Position, Size } from './types'\n\ntype PointerHandler = (event: PointerEvent) => void\ntype PointerListenerHandlers = {\n    down: PointerHandler\n    move: PointerHandler\n    up: PointerHandler\n}\n\nexport type PointerListener = { destroy: () => void }\n\n/**\n * listen to pointerdown, window's pointermove and pointerup events,\n * where last two not active before pointerdown triggered for performance reasons\n */\nexport function usePointerListener(element: HTMLElement, handlers: PointerListenerHandlers): PointerListener {\n  const move: PointerHandler = (event) => {\n    handlers.move(event)\n  }\n  const up: PointerHandler = (event) => {\n    window.removeEventListener('pointermove', move)\n    window.removeEventListener('pointerup', up)\n    window.removeEventListener('pointercancel', up)\n    handlers.up(event)\n  }\n  const down: PointerHandler = (event) => {\n    window.addEventListener('pointermove', move)\n    window.addEventListener('pointerup', up)\n    window.addEventListener('pointercancel', up)\n    handlers.down(event)\n  }\n\n  element.addEventListener('pointerdown', down)\n\n  return {\n    destroy() {\n      element.removeEventListener('pointerdown', down)\n      window.removeEventListener('pointermove', move)\n      window.removeEventListener('pointerup', up)\n      window.removeEventListener('pointercancel', up)\n    }\n  }\n}\n\n/**\n * Bounding box\n */\nconst min = (arr: number[]) => arr.length === 0 ? 0 : Math.min(...arr)\nconst max = (arr: number[]) => arr.length === 0 ? 0 : Math.max(...arr)\n\nexport function getBoundingBox(rects: ({ position: Position } & Size)[]) {\n  const left = min(rects.map(rect => rect.position.x))\n  const top = min(rects.map(rect => rect.position.y))\n  const right = max(rects.map(rect => rect.position.x + rect.width))\n  const bottom = max(rects.map(rect => rect.position.y + rect.height))\n\n  return {\n    left,\n    right,\n    top,\n    bottom,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n    center: {\n      x: (left + right) / 2,\n      y: (top + bottom) / 2\n    }\n  }\n}\n","import { Position } from './types'\nimport { PointerListener, usePointerListener } from './utils'\n\ntype Events = {\n  start: (e: PointerEvent) => void\n  translate: (x: number, y: number, e: PointerEvent) => void\n  drag: (e: PointerEvent) => void\n}\n\ntype Guards = {\n  down: (e: PointerEvent) => boolean\n  move: (e: PointerEvent) => boolean\n}\n\ntype DragConfig = {\n  getCurrentPosition: () => Position\n  getZoom: () => number\n}\n\n/**\n * Drag handler, used to handle dragging of the area and nodes. Can be extended to add custom behavior.\n */\nexport class Drag {\n  private pointerStart?: Position\n  private startPosition?: Position\n  private pointerListener!: PointerListener\n  protected config!: DragConfig\n  protected events!: Events\n  protected guards: Guards\n\n  constructor(guards?: Guards) {\n    this.guards = guards || {\n      down: e => !(e.pointerType === 'mouse' && e.button !== 0),\n      move: () => true\n    }\n  }\n\n  public initialize(element: HTMLElement, config: DragConfig, events: Events) {\n    this.config = config\n    this.events = events\n    element.style.touchAction = 'none'\n    this.pointerListener = usePointerListener(element, {\n      down: this.down,\n      move: this.move,\n      up: this.up\n    })\n  }\n\n  private down = (e: PointerEvent) => {\n    if (!this.guards.down(e)) return\n\n    e.stopPropagation()\n    this.pointerStart = { x: e.pageX, y: e.pageY }\n    this.startPosition = { ...this.config.getCurrentPosition() }\n\n    this.events.start(e)\n  }\n\n  private move = (e: PointerEvent) => {\n    if (!this.pointerStart || !this.startPosition) return\n    if (!this.guards.move(e)) return\n    e.preventDefault()\n\n    const delta = {\n      x: e.pageX - this.pointerStart.x,\n      y: e.pageY - this.pointerStart.y\n    }\n    const zoom = this.config.getZoom()\n    const x = this.startPosition.x + delta.x / zoom\n    const y = this.startPosition.y + delta.y / zoom\n\n    this.events.translate(x, y, e)\n  }\n\n  private up = (e: PointerEvent) => {\n    if (!this.pointerStart) return\n\n    delete this.pointerStart\n    this.events.drag(e)\n  }\n\n  public destroy() {\n    this.pointerListener.destroy()\n  }\n}\n","\n/**\n * Zoom source\n */\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick'\nexport type OnZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => void\n\n/**\n * Zoom class, used to handle zooming of the area. Can be extended to add custom behavior.\n * @internal\n */\nexport class Zoom {\n  protected previous: { cx: number, cy: number, distance: number } | null = null\n  protected pointers: PointerEvent[] = []\n  protected container!: HTMLElement\n  protected element!: HTMLElement\n  protected onzoom!: OnZoom\n\n  constructor(protected intensity: number) { }\n\n  public initialize(container: HTMLElement, element: HTMLElement, onzoom: OnZoom) {\n    this.container = container\n    this.element = element\n    this.onzoom = onzoom\n    this.container.addEventListener('wheel', this.wheel)\n    this.container.addEventListener('pointerdown', this.down)\n    this.container.addEventListener('dblclick', this.dblclick)\n\n    window.addEventListener('pointermove', this.move)\n    window.addEventListener('pointerup', this.up)\n    window.addEventListener('contextmenu', this.contextmenu)\n    window.addEventListener('pointercancel', this.up)\n  }\n\n  protected wheel = (e: WheelEvent) => {\n    e.preventDefault()\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const isNegative = e.deltaY < 0\n    const delta = isNegative ? this.intensity : - this.intensity\n    const ox = (left - e.clientX) * delta\n    const oy = (top - e.clientY) * delta\n\n    this.onzoom(delta, ox, oy, 'wheel')\n  }\n\n  private getTouches() {\n    const e = { touches: this.pointers }\n    const [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY]\n    const [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY]\n\n    const distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n\n    return {\n      cx: (x1 + x2) / 2,\n      cy: (y1 + y2) / 2,\n      distance\n    }\n  }\n\n  protected down = (e: PointerEvent) => {\n    this.pointers.push(e)\n  }\n\n  protected move = (e: PointerEvent) => {\n    this.pointers = this.pointers.map(p => p.pointerId === e.pointerId ? e : p)\n    if (!this.isTranslating()) return\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const { cx, cy, distance } = this.getTouches()\n\n    if (this.previous !== null && this.previous.distance > 0) {\n      const delta = distance / this.previous.distance - 1\n\n      const ox = (left - cx) * delta\n      const oy = (top - cy) * delta\n\n      this.onzoom(delta, ox - (this.previous.cx - cx), oy - (this.previous.cy - cy), 'touch')\n    }\n    this.previous = { cx, cy, distance }\n  }\n\n  protected contextmenu = () => {\n    this.pointers = []\n  }\n\n  protected up = (e: PointerEvent) => {\n    this.previous = null\n    this.pointers = this.pointers.filter(p => p.pointerId !== e.pointerId)\n  }\n\n  protected dblclick = (e: MouseEvent) => {\n    e.preventDefault()\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const delta = 4 * this.intensity\n\n    const ox = (left - e.clientX) * delta\n    const oy = (top - e.clientY) * delta\n\n    this.onzoom(delta, ox, oy, 'dblclick')\n  }\n\n  public isTranslating() { // is translating while zoom (works on multitouch)\n    return this.pointers.length >= 2\n  }\n\n  public destroy() {\n    this.container.removeEventListener('wheel', this.wheel)\n    this.container.removeEventListener('pointerdown', this.down)\n    this.container.removeEventListener('dblclick', this.dblclick)\n\n    window.removeEventListener('pointermove', this.move)\n    window.removeEventListener('pointerup', this.up)\n    window.removeEventListener('pointercancel', this.up)\n  }\n}\n","import { Content } from './content'\nimport { Drag } from './drag'\nimport { Position } from './types'\nimport { Zoom, ZoomSource } from './zoom'\n\nexport type Transform = Position & { k: number }\nexport type TranslateEventParams = { previous: Transform, position: Position }\nexport type ZoomEventParams = { previous: Transform, zoom: number, source?: ZoomSource }\n\ntype Events = {\n  zoomed: (params: ZoomEventParams) => Promise<unknown>\n  pointerDown: (position: Position, event: PointerEvent) => void\n  pointerMove: (position: Position, event: PointerEvent) => void\n  pointerUp: (position: Position, event: PointerEvent) => void\n  resize: (event: Event) => void\n  translated: (params: TranslateEventParams) => Promise<unknown>\n  reordered: (element: HTMLElement) => Promise<unknown>\n}\ntype Guards = {\n  translate: (params: TranslateEventParams) => Promise<unknown | boolean>\n  zoom: (params: ZoomEventParams) => Promise<unknown | boolean>\n}\n\nexport class Area {\n  public transform: Transform = { k: 1, x: 0, y: 0 }\n  public pointer: Position = { x: 0, y: 0 }\n  public content: Content\n\n  private zoomHandler: Zoom | null = null\n  private dragHandler: Drag | null = null\n\n  constructor(private container: HTMLElement, private events: Events, private guards: Guards) {\n    this.content = new Content(element => this.events.reordered(element))\n    this.content.holder.style.transformOrigin = '0 0'\n\n    this.setZoomHandler(new Zoom(0.1))\n    this.setDragHandler(new Drag())\n\n    this.container.addEventListener('pointerdown', this.pointerdown)\n    this.container.addEventListener('pointermove', this.pointermove)\n    window.addEventListener('pointerup', this.pointerup)\n    window.addEventListener('resize', this.resize)\n\n    container.appendChild(this.content.holder)\n    this.update()\n  }\n\n  private update() {\n    const { x, y, k } = this.transform\n\n    this.content.holder.style.transform = `translate(${x}px, ${y}px) scale(${k})`\n  }\n\n  /**\n   * Drag handler. Destroy previous drag handler if exists.\n   * @param drag drag handler\n   * @example area.area.setDragHandler(null) // disable drag\n   */\n  public setDragHandler(drag: Drag | null) {\n    if (this.dragHandler) this.dragHandler.destroy()\n    this.dragHandler = drag\n    if (this.dragHandler) this.dragHandler.initialize(\n      this.container,\n      {\n        getCurrentPosition: () => this.transform,\n        getZoom: () => 1\n      },\n      {\n        start: () => null,\n        translate: this.onTranslate,\n        drag: () => null\n      }\n    )\n  }\n\n  /**\n   * Set zoom handler. Destroy previous zoom handler if exists.\n   * @param zoom zoom handler\n   * @example area.area.setZoomHandler(null) // disable zoom\n   */\n  public setZoomHandler(zoom: Zoom | null) {\n    if (this.zoomHandler) this.zoomHandler.destroy()\n    this.zoomHandler = zoom\n    if (this.zoomHandler) this.zoomHandler.initialize(this.container, this.content.holder, this.onZoom)\n  }\n\n  public setPointerFrom(event: MouseEvent) {\n    const { x, y } = this.content.getPointerFrom(event)\n    const { k } = this.transform\n\n    this.pointer = { x: x / k, y: y / k }\n  }\n\n  private pointerdown = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerDown(this.pointer, event)\n  }\n\n  private pointermove = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerMove(this.pointer, event)\n  }\n\n  private pointerup = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerUp(this.pointer, event)\n  }\n\n  private resize = (event: Event) => {\n    this.events.resize(event)\n  }\n\n  private onTranslate = (x: number, y: number) => {\n    if (this.zoomHandler && this.zoomHandler.isTranslating()) return // lock translation while zoom on multitouch\n    this.translate(x, y)\n  }\n\n  private onZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => {\n    this.zoom(this.transform.k * (1 + delta), ox, oy, source)\n\n    this.update()\n  }\n\n  /**\n   * Change position of the area\n   * @param x desired x coordinate\n   * @param y desired y coordinate\n   * @returns true if the translation was successful, false otherwise\n   * @emits translate\n   * @emits translated\n   */\n  public async translate(x: number, y: number) {\n    type T = undefined | { data: TranslateEventParams }\n    const position = { x, y }\n    const result = await this.guards.translate({ previous: this.transform, position }) as T\n\n    if (!result) return false\n\n    this.transform.x = result.data.position.x\n    this.transform.y = result.data.position.y\n\n    this.update()\n\n    await this.events.translated(result.data)\n    return true\n  }\n\n  /**\n   * Change zoom level of the area\n   * @param zoom new zoom level\n   * @param ox x coordinate of the origin of the zoom\n   * @param oy y coordinate of the origin of the zoom\n   * @param source source of the zoom\n   * @returns true if the zoom was successful, false otherwise\n   * @emits zoom\n   * @emits zoomed\n   */\n  public async zoom(zoom: number, ox = 0, oy = 0, source?: ZoomSource) {\n    type T = undefined | { data: ZoomEventParams }\n    const k = this.transform.k\n    const result = await this.guards.zoom({ previous: this.transform, zoom, source }) as T\n\n    if (!result) return true\n\n    const d = (k - result.data.zoom) / ((k - zoom) || 1)\n\n    this.transform.k = result.data.zoom || 1\n    this.transform.x += ox * d\n    this.transform.y += oy * d\n\n    this.update()\n\n    await this.events.zoomed(result.data)\n    return false\n  }\n\n  public destroy() {\n    this.container.removeEventListener('pointerdown', this.pointerdown)\n    this.container.removeEventListener('pointermove', this.pointermove)\n    window.removeEventListener('pointerup', this.pointerup)\n    window.removeEventListener('resize', this.resize)\n    if (this.dragHandler) this.dragHandler.destroy()\n    if (this.zoomHandler) this.zoomHandler.destroy()\n    this.content.holder.innerHTML = ''\n  }\n}\n","import { BaseSchemes, ConnectionId, NodeId, Root, Scope } from 'rete'\n\nimport { NodeResizeEventParams, NodeTranslateEventParams } from './node-view'\nimport { GetRenderTypes, Position, RenderSignal } from './types'\n\ninterface NodeView {\n  element: HTMLElement\n  position: Position\n  translate(x: number, y: number): Promise<boolean>\n  resize(width: number, height: number): Promise<boolean>\n}\n\ninterface ConnectionView {\n  element: HTMLElement\n}\n\ninterface Content {\n  holder: HTMLElement\n  add(element: HTMLElement): void\n  // eslint-disable-next-line no-undef\n  reorder(target: HTMLElement, next: ChildNode | null): void\n  remove(element: HTMLElement): void\n}\n\ninterface Area {\n  pointer: Position\n  content: Content\n}\n\n/**\n * A union of all possible signals that can be emitted by any area plugin\n * @priority 10\n */\nexport type BaseArea<Schemes extends BaseSchemes> =\n  | { type: 'nodepicked', data: { id: string } }\n  | { type: 'nodedragged', data: Schemes['Node'] }\n  | { type: 'nodetranslate', data: { id: string } & NodeTranslateEventParams }\n  | { type: 'nodetranslated', data: { id: string } & NodeTranslateEventParams }\n  | { type: 'contextmenu', data: { event: MouseEvent, context: 'root' | Schemes['Node'] | Schemes['Connection'] } }\n  | { type: 'pointerdown', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\n  | { type: 'noderesize', data: { id: string } & NodeResizeEventParams }\n  | { type: 'noderesized', data: { id: string } & NodeResizeEventParams }\n  | RenderSignal<'node', { payload: Schemes['Node'] }>\n  | RenderSignal<'connection', { payload: Schemes['Connection'], start?: Position, end?: Position }>\n  | { type: 'unmount', data: { element: HTMLElement } }\n  | { type: 'reordered', data: { element: HTMLElement } }\n\n/**\n * Base abstract class for area plugins that provides a common interface\n * @abstract\n */\nexport abstract class BaseAreaPlugin<Schemes extends BaseSchemes, Signals> extends Scope<Signals, [Root<Schemes>]> {\n  public abstract nodeViews: Map<NodeId, NodeView>\n  public abstract connectionViews: Map<ConnectionId, ConnectionView>\n  public abstract area: Area\n\n  abstract addNodeView(connection: Schemes['Node']): NodeView\n  abstract removeNodeView(connection: NodeId): void\n  abstract addConnectionView(connection: Schemes['Connection']): ConnectionView\n  abstract removeConnectionView(connection: ConnectionId): void\n  abstract update(type: GetRenderTypes<Signals>, id: string): Promise<void | boolean | undefined>\n  abstract resize(id: NodeId, width: number, height: number): Promise<void | boolean | undefined>\n  abstract translate(id: NodeId, position: Position): Promise<void | boolean | undefined>\n  abstract destroy(): void\n}\n","\ntype Events = {\n  contextmenu: (event: MouseEvent) => void\n}\n\nexport class ConnectionView {\n  element: HTMLElement\n\n  constructor(events: Events) {\n    this.element = document.createElement('div')\n\n    this.element.style.position = 'absolute'\n    this.element.style.left = '0'\n    this.element.style.top = '0'\n    this.element.addEventListener('contextmenu', event => events.contextmenu(event))\n  }\n}\n","\nexport class ElementsHolder<E extends HTMLElement, Ctx extends { type: string, element: E, payload?: { id: string } }> {\n  views = new WeakMap<E, Ctx>()\n  viewsElements = new Map<`${string}_${string}`, E>()\n\n  public set(context: Ctx) {\n    const { element, type, payload } = context\n\n    if (payload?.id) {\n      this.views.set(element, context)\n      this.viewsElements.set(`${type}_${payload.id}`, element)\n    }\n  }\n\n  public get(type: string, id: string) {\n    const element = this.viewsElements.get(`${type}_${id}`)\n\n    return element && this.views.get(element)\n  }\n\n  public delete(element: E) {\n    const view = this.views.get(element)\n\n    if (view && view.payload?.id) {\n      this.views.delete(element)\n      this.viewsElements.delete(`${view.type}_${view.payload.id}`)\n    }\n  }\n}\n","import { Drag } from './drag'\nimport { Position, Size } from './types'\n\nexport type NodeTranslateEventParams = { position: Position, previous: Position }\nexport type NodeResizeEventParams = { size: Size }\n\ntype Events = {\n  picked: () => void\n  translated: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\n  dragged: () => void\n  contextmenu: (event: MouseEvent) => void\n  resized: (params: NodeResizeEventParams) => Promise<unknown | boolean>\n}\ntype Guards = {\n  resize: (params: NodeResizeEventParams) => Promise<unknown | boolean>\n  translate: (params: NodeTranslateEventParams) => Promise<unknown | boolean>\n}\n\nexport class NodeView {\n  element: HTMLElement\n  position: Position\n  dragHandler: Drag\n\n  constructor(private getZoom: () => number, private events: Events, private guards: Guards) {\n    this.element = document.createElement('div')\n    this.element.style.position = 'absolute'\n    this.position = { x: 0, y: 0 }\n    this.translate(0, 0)\n\n    this.element.addEventListener('contextmenu', event => this.events.contextmenu(event))\n\n    this.dragHandler = new Drag()\n    this.dragHandler.initialize(\n      this.element,\n      {\n        getCurrentPosition: () => this.position,\n        getZoom: () => this.getZoom()\n      },\n      {\n        start: this.events.picked,\n        translate: this.translate,\n        drag: this.events.dragged\n      }\n    )\n  }\n\n  public translate = async (x: number, y: number) => {\n    type Params = undefined | { data: NodeTranslateEventParams }\n    const previous = { ...this.position }\n    const translation = await this.guards.translate({ previous, position: { x, y } }) as Params\n\n    if (!translation) return false\n\n    this.position = { ...translation.data.position }\n    this.element.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`\n\n    await this.events.translated({ position: this.position, previous })\n\n    return true\n  }\n\n  public resize = async (width: number, height: number) => {\n    const size = { width, height }\n\n    if (!(await this.guards.resize({ size }))) return false\n\n    const el = this.element.querySelector('*:not(span)')\n\n    if (!el || !(el instanceof HTMLElement)) return false\n\n    el.style.width = `${width}px`\n    el.style.height = `${height}px`\n\n    await this.events.resized({ size })\n\n    return true\n  }\n\n  public destroy() {\n    this.dragHandler.destroy()\n  }\n}\n","import { BaseAreaPlugin } from '../../base'\nimport { NodeView } from '../../node-view'\nimport { SchemesWithSizes } from './types'\n\nexport function getNodesRect<S extends SchemesWithSizes, K>(nodes: S['Node'][], views: BaseAreaPlugin<S, K>['nodeViews']) {\n  return nodes\n    .map(node => ({ view: views.get(node.id) as NodeView, node }))\n    .filter(item => item.view)\n    .map(({ view, node }) => {\n      const { width, height } = node\n\n      if (typeof width !== 'undefined' && typeof height !== 'undefined') {\n        return {\n          position: view.position,\n          width,\n          height\n        }\n      }\n\n      return {\n        position: view.position,\n        width: view.element.clientWidth,\n        height: view.element.clientHeight\n      }\n    })\n}\n","import { BaseSchemes, NodeEditor } from 'rete'\n\nimport { BaseAreaPlugin } from '../base'\nimport { getBoundingBox as getBBox } from '../utils'\nimport { NodeRef } from './shared/types'\nimport { getNodesRect } from './shared/utils'\n\n/**\n * Get the bounding box of the given nodes\n * @param plugin The area plugin\n * @param nodes The nodes to get the bounding box of\n * @returns The bounding box\n */\nexport function getBoundingBox<Schemes extends BaseSchemes, K>(plugin: BaseAreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[]) {\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n\n  return getBBox(rects)\n}\n","import { BaseSchemes } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\n/**\n * Simple nodes order extension\n * @param base The base area plugin\n * @listens nodepicked\n * @listens connectioncreated\n */\nexport function simpleNodesOrder<Schemes extends BaseSchemes, T>(base: BaseAreaPlugin<Schemes, T>) {\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'nodepicked') {\n      const view = area.nodeViews.get(context.data.id)\n      const { content } = area.area\n\n      if (view) {\n        content.reorder(view.element, null)\n      }\n    }\n    if (context.type === 'connectioncreated') {\n      const view = area.connectionViews.get(context.data.id)\n      const { content } = area.area\n\n      if (view) {\n        content.reorder(view.element, content.holder.firstChild)\n      }\n    }\n    return context\n  })\n}\n","import { BaseSchemes } from 'rete'\n\nimport { AreaPlugin } from '..'\nimport { Position } from '../types'\n\ntype ScaleRange = { min: number, max: number }\ntype TranslateRange = { left: number, top: number, right: number, bottom: number }\n\n/**\n * Restrictor extension parameters\n */\nexport type Params = {\n  /** The scaling range */\n  scaling?: ScaleRange | (() => ScaleRange) | boolean\n  /** The translation range */\n  translation?: TranslateRange | (() => TranslateRange) | boolean\n}\n\n/**\n * Restrictor extension. Restricts the area zoom and position\n * @param plugin The area plugin\n * @param params The restrictor parameters\n * @listens zoom\n * @listens zoomed\n * @listens translated\n */\nexport function restrictor<Schemes extends BaseSchemes, K>(plugin: AreaPlugin<Schemes, K>, params?: Params) {\n  const scaling = params?.scaling\n    ? params.scaling === true ? { min: 0.1, max: 1 } : params.scaling\n    : false\n  const translation = params?.translation\n    ? params.translation === true ? { left: 0, top: 0, right: 1000, bottom: 1000 } : params.translation\n    : false\n\n  function restrictZoom(zoom: number) {\n    if (!scaling) throw new Error('scaling param isnt defined')\n    const { min, max } = typeof scaling === 'function' ? scaling() : scaling\n\n    if (zoom < min) {\n      return min\n    } else if (zoom > max) {\n      return max\n    }\n    return zoom\n  }\n\n  // eslint-disable-next-line max-statements\n  function restrictPosition(position: Position): Position {\n    if (!translation) throw new Error('translation param isnt defined')\n    const nextPosition = { ...position }\n    const { left, top, right, bottom } = typeof translation === 'function'\n      ? translation()\n      : translation\n\n    if (nextPosition.x < left) {\n      nextPosition.x = left\n    }\n    if (nextPosition.x > right) {\n      nextPosition.x = right\n    }\n    if (nextPosition.y < top) {\n      nextPosition.y = top\n    }\n    if (nextPosition.y > bottom) {\n      nextPosition.y = bottom\n    }\n\n    return nextPosition\n  }\n\n  plugin.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (scaling && context.type === 'zoom') {\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          zoom: restrictZoom(context.data.zoom)\n        }\n      }\n    }\n    if (translation && context.type === 'zoomed') {\n      const position = restrictPosition(plugin.area.transform)\n\n      plugin.area.translate(position.x, position.y)\n    }\n    if (translation && context.type === 'translate') {\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          position: restrictPosition(context.data.position)\n        }\n      }\n    }\n    return context\n  })\n}\n","import { BaseSchemes, GetSchemes, NodeEditor, NodeId } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\ntype Schemes = GetSchemes<BaseSchemes['Node'] & { selected?: boolean }, any>\n\n/**\n * Selector's accumulate function, activated when the ctrl key is pressed\n */\nexport function accumulateOnCtrl() {\n  let pressed = false\n\n  function keydown(e: KeyboardEvent) {\n    if (e.key === 'Control') pressed = true\n  }\n  function keyup(e: KeyboardEvent) {\n    if (e.key === 'Control') pressed = false\n  }\n\n  document.addEventListener('keydown', keydown)\n  document.addEventListener('keyup', keyup)\n\n  return {\n    active() {\n      return pressed\n    },\n    destroy() {\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n    }\n  }\n}\n\nexport type SelectorEntity = { label: string, id: string, unselect(): void, translate(dx: number, dy: number): void }\n\n/**\n * Selector class. Used to collect selected entities (nodes, connections, etc.) and synchronize them (select, unselect, translate, etc.).\n * Can be extended to add custom functionality.\n */\nexport class Selector<E extends SelectorEntity> {\n  entities = new Map<string, E>()\n  pickId: string | null = null\n\n  isSelected(entity: Pick<E, 'label' | 'id'>) {\n    return this.entities.has(`${entity.label}_${entity.id}`)\n  }\n\n  add(entity: E, accumulate: boolean) {\n    if (!accumulate) this.unselectAll()\n    this.entities.set(`${entity.label}_${entity.id}`, entity)\n  }\n\n  remove(entity: Pick<E, 'label' | 'id'>) {\n    const id = `${entity.label}_${entity.id}`\n    const item = this.entities.get(id)\n\n    if (item) {\n      this.entities.delete(id)\n      item.unselect()\n    }\n  }\n\n  unselectAll() {\n    [...Array.from(this.entities.values())].forEach(item => this.remove(item))\n  }\n\n  translate(dx: number, dy: number) {\n    this.entities.forEach(item => !this.isPicked(item) && item.translate(dx, dy))\n  }\n\n  pick(entity: Pick<E, 'label' | 'id'>) {\n    this.pickId = `${entity.label}_${entity.id}`\n  }\n\n  release() {\n    this.pickId = null\n  }\n\n  isPicked(entity: Pick<E, 'label' | 'id'>) {\n    return this.pickId === `${entity.label}_${entity.id}`\n  }\n}\n\n/**\n * Selector factory, uses default Selector class\n * @returns Selector instance\n */\nexport function selector<E extends SelectorEntity>() {\n  return new Selector<E>()\n}\n\n/**\n * Accumulating interface, used to determine whether to accumulate entities on selection\n */\nexport type Accumulating = {\n  active(): boolean\n}\n\nexport type Selectable = ReturnType<typeof selector>\n\n/**\n * Selectable nodes extension. Adds the ability to select nodes in the area.\n * @param base BaseAreaPlugin instance\n * @param core Selectable instance\n * @param options.accumulating Accumulating interface\n * @listens nodepicked\n * @listens nodetranslated\n * @listens pointerdown\n * @listens pointermove\n * @listens pointerup\n */\nexport function selectableNodes<T>(base: BaseAreaPlugin<Schemes, T>, core: Selectable, options: { accumulating: Accumulating }) {\n  let editor: null | NodeEditor<Schemes> = null\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<Schemes>>(NodeEditor))\n\n  let twitch: null | number = 0\n\n  function selectNode(node: Schemes['Node']) {\n    if (!node.selected) {\n      node.selected = true\n      area.update('node', node.id)\n    }\n  }\n\n  function unselectNode(node: Schemes['Node']) {\n    if (node.selected) {\n      node.selected = false\n      area.update('node', node.id)\n    }\n  }\n  /**\n   * Select node programmatically\n   * @param nodeId Node id\n   * @param accumulate Whether to accumulate nodes on selection\n   */\n  function add(nodeId: NodeId, accumulate: boolean) {\n    const node = getEditor().getNode(nodeId)\n\n    if (!node) return\n\n    core.add({\n      label: 'node',\n      id: node.id,\n      translate(dx, dy) {\n        const view = area.nodeViews.get(node.id)\n        const current = view?.position\n\n        if (current) {\n          view.translate(current.x + dx, current.y + dy)\n        }\n      },\n      unselect() {\n        unselectNode(node)\n      }\n    }, accumulate)\n    selectNode(node)\n  }\n  /**\n   * Unselect node programmatically\n   * @param nodeId Node id\n   */\n  function remove(nodeId: NodeId) {\n    core.remove({ id: nodeId, label: 'node' })\n  }\n\n  // eslint-disable-next-line max-statements, complexity\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'nodepicked') {\n      const pickedId = context.data.id\n      const accumulate = options.accumulating.active()\n\n      core.pick({ id: pickedId, label: 'node' })\n      twitch = null\n      add(pickedId, accumulate)\n    } else if (context.type === 'nodetranslated') {\n      const { id, position, previous } = context.data\n      const dx = position.x - previous.x\n      const dy = position.y - previous.y\n\n      if (core.isPicked({ id, label: 'node' })) core.translate(dx, dy)\n    } else if (context.type === 'pointerdown') {\n      twitch = 0\n    } else if (context.type === 'pointermove') {\n      if (twitch !== null) twitch++\n    } else if (context.type === 'pointerup') {\n      if (twitch !== null && twitch < 4) {\n        core.unselectAll()\n      }\n      twitch = null\n    }\n    return context\n  })\n\n  return {\n    select: add,\n    unselect: remove\n  }\n}\n\n","import { BaseSchemes, ClassicPreset as Classic, GetSchemes, NodeEditor } from 'rete'\n\nimport { BaseAreaPlugin } from '../base'\n\ntype Scheme = GetSchemes<Classic.Node, Classic.Connection<Classic.Node, Classic.Node>>\ntype Visible<S extends Scheme> = (props: { hasAnyConnection: boolean, input: NonNullable<S['Node']['inputs'][string]> }) => boolean\n\n/**\n * Show input control extension. It will show the input's control when there is no connection and hide it when there is a connection.\n * @param area The base area plugin\n * @param visible The visible function\n * @listens connectioncreated\n * @listens connectionremoved\n */\nexport function showInputControl<S extends Scheme>(area: BaseAreaPlugin<BaseSchemes, any>, visible?: Visible<S>) {\n  let editor: null | NodeEditor<S> = null\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<S>>(NodeEditor))\n\n  function updateInputControlVisibility(target: string, targetInput: string) {\n    const node = getEditor().getNode(target)\n\n    if (!node) return\n\n    const input = (node.inputs as Record<string, S['Node']['inputs'][string] | undefined>)[targetInput]\n\n    if (!input) throw new Error('cannot find input')\n\n    const previous = input.showControl\n    const connections = getEditor().getConnections()\n    const hasAnyConnection = Boolean(connections.find(connection => {\n      return connection.target === target && connection.targetInput === targetInput\n    }))\n\n    input.showControl = visible ? visible({ hasAnyConnection, input }) : !hasAnyConnection\n\n    if (input.showControl !== previous) {\n      area.update('node', node.id)\n    }\n  }\n\n  area.addPipe(context => {\n    if (context.type === 'connectioncreated' || context.type === 'connectionremoved') {\n      updateInputControlVisibility(context.data.target, context.data.targetInput)\n    }\n    return context\n  })\n}\n","import { BaseSchemes } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\n/**\n * Snap grid extension parameters\n */\nexport type Params = {\n  /** The grid size */\n  size?: number\n  /** Whether to snap on node drag */\n  dynamic?: boolean\n}\n\n/**\n * Snap grid extension\n * @param base The base area plugin\n * @param params The snap parameters\n * @listens nodetranslate\n * @listens nodedragged\n */\nexport function snapGrid<Schemes extends BaseSchemes, K>(base: BaseAreaPlugin<Schemes, K>, params?: Params) {\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  const size = typeof params?.size === 'undefined' ? 16 : params.size\n  const dynamic = typeof params?.dynamic === 'undefined' ? true : params.dynamic\n\n  function snap(value: number) {\n    return Math.round(value / size) * size\n  }\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (dynamic && context.type === 'nodetranslate') {\n      const { position } = context.data\n      const x = snap(position.x)\n      const y = snap(position.y)\n\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          position: { x, y }\n        }\n      }\n    }\n    if (!dynamic && context.type === 'nodedragged') {\n      const view = area.nodeViews.get(context.data.id)\n\n      if (view) {\n        const { x, y } = view.position\n\n        view.translate(snap(x), snap(y))\n      }\n    }\n    return context\n  })\n}\n","import { NodeEditor } from 'rete'\n\nimport { AreaPlugin } from '..'\nimport { getBoundingBox } from '../utils'\nimport { NodeRef, SchemesWithSizes } from './shared/types'\nimport { getNodesRect } from './shared/utils'\n\n/**\n * Zoom extension parameters\n */\nexport type Params = {\n  /** Set gap between nodes and the viewport border */\n  scale?: number\n}\n\n/**\n * Zooms the area to fit the given nodes\n * @param plugin The area plugin\n * @param nodes The nodes to fit\n * @param params The zoom parameters\n */\n// eslint-disable-next-line max-statements, max-len\nexport async function zoomAt<Schemes extends SchemesWithSizes, K>(plugin: AreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[], params?: Params) {\n  const { scale = 0.9 } = params || {}\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object' ? node : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n  const boundingBox = getBoundingBox(rects)\n  const [w, h] = [plugin.container.clientWidth, plugin.container.clientHeight]\n  const [kw, kh] = [w / boundingBox.width, h / boundingBox.height]\n  const k = Math.min(kh * scale, kw * scale, 1)\n\n  plugin.area.transform.x = w / 2 - boundingBox.center.x * k\n  plugin.area.transform.y = h / 2 - boundingBox.center.y * k\n  await plugin.area.zoom(k, 0, 0)\n}\n","/**\n * Area extensions\n * @priority 7\n * @module Extensions\n */\nexport { getBoundingBox } from './bounding-box'\nexport { simpleNodesOrder } from './order'\nexport type { Params as Restrictor } from './restrictor'\nexport { restrictor } from './restrictor'\nexport { accumulateOnCtrl, selectableNodes, Selector, selector } from './selectable'\nexport { showInputControl } from './show-input-control'\nexport type { Params as SnapGrid } from './snap'\nexport { snapGrid } from './snap'\nexport type { Params as ZoomAt } from './zoom-at'\nexport { zoomAt } from './zoom-at'\n","import { BaseSchemes, ConnectionId, NodeId, Root } from 'rete'\n\nimport { Area, TranslateEventParams, ZoomEventParams } from './area'\nimport { BaseArea, BaseAreaPlugin } from './base'\nimport { ConnectionView } from './connection-view'\nimport { ElementsHolder } from './elements-holder'\nimport { NodeView } from './node-view'\nimport { GetRenderTypes, Position, RenderMeta } from './types'\n\nexport { Area } from './area'\nexport type { BaseArea } from './base'\nexport { BaseAreaPlugin } from './base'\nexport { Drag } from './drag'\nexport * as AreaExtensions from './extensions'\nexport { NodeView } from './node-view'\nexport type { RenderSignal } from './types'\nexport type { PointerListener } from './utils'\nexport { usePointerListener } from './utils'\nexport { Zoom } from './zoom'\n\n/**\n * A union of all possible signals that can be emitted by the area\n * @priority 9\n */\nexport type Area2D<Schemes extends BaseSchemes> =\n  | BaseArea<Schemes>\n  | { type: 'translate', data: TranslateEventParams }\n  | { type: 'translated', data: TranslateEventParams }\n  | { type: 'zoom', data: ZoomEventParams }\n  | { type: 'zoomed', data: ZoomEventParams }\n  | { type: 'resized', data: { event: Event } }\n\nexport type Area2DInherited<Schemes extends BaseSchemes, ExtraSignals = never> = [Area2D<Schemes> | ExtraSignals, Root<Schemes>]\n\n/**\n * A plugin that provides a 2D area for nodes and connections\n * @priority 8\n * @emits render\n * @emits rendered\n * @emits unmount\n * @listens nodecreated\n * @listens noderemoved\n * @listens connectioncreated\n * @listens connectionremoved\n */\nexport class AreaPlugin<Schemes extends BaseSchemes, ExtraSignals = never> extends BaseAreaPlugin<Schemes, Area2D<Schemes> | ExtraSignals> {\n  public nodeViews = new Map<NodeId, NodeView>()\n  public connectionViews = new Map<ConnectionId, ConnectionView>()\n  public area: Area\n  private elements = new ElementsHolder<HTMLElement, Extract<Area2D<Schemes>, { type: 'render' }>['data'] & RenderMeta>()\n\n  constructor(public container: HTMLElement) {\n    super('area')\n    container.style.overflow = 'hidden'\n    container.addEventListener('contextmenu', this.onContextMenu)\n\n    // eslint-disable-next-line max-statements\n    this.addPipe(context => {\n      if (!context || !(typeof context === 'object' && 'type' in context)) return context\n      if (context.type === 'nodecreated') {\n        this.addNodeView(context.data)\n      }\n      if (context.type === 'noderemoved') {\n        this.removeNodeView(context.data.id)\n      }\n      if (context.type === 'connectioncreated') {\n        this.addConnectionView(context.data)\n      }\n      if (context.type === 'connectionremoved') {\n        this.removeConnectionView(context.data.id)\n      }\n      if (context.type === 'render') {\n        this.elements.set(context.data)\n      }\n      if (context.type === 'unmount') {\n        this.elements.delete(context.data.element)\n      }\n      return context\n    })\n    this.area = new Area(\n      container,\n      {\n        zoomed: params => this.emit({ type: 'zoomed', data: params }),\n        pointerDown: (position, event) => this.emit({ type: 'pointerdown', data: { position, event } }),\n        pointerMove: (position, event) => this.emit({ type: 'pointermove', data: { position, event } }),\n        pointerUp: (position, event) => this.emit({ type: 'pointerup', data: { position, event } }),\n        resize: event => this.emit({ type: 'resized', data: { event } }),\n        translated: params => this.emit({ type: 'translated', data: params }),\n        reordered: element => this.emit({ type: 'reordered', data: { element } })\n      },\n      {\n        translate: params => this.emit({ type: 'translate', data: params }),\n        zoom: params => this.emit({ type: 'zoom', data: params })\n      }\n    )\n  }\n\n  private onContextMenu = (event: MouseEvent) => {\n    this.emit({ type: 'contextmenu', data: { event, context: 'root' } })\n  }\n\n  public addNodeView(node: Schemes['Node']) {\n    const { id } = node\n    const view = new NodeView(\n      () => this.area.transform.k,\n      {\n        picked: () => this.emit({ type: 'nodepicked', data: { id } }),\n        translated: data => this.emit({ type: 'nodetranslated', data: { id, ...data } }),\n        dragged: () => this.emit({ type: 'nodedragged', data: node }),\n        contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: node } }),\n        resized: ({ size }) => this.emit({ type: 'noderesized', data: { id: node.id, size } })\n      },\n      {\n        translate: data => this.emit({ type: 'nodetranslate', data: { id, ...data } }),\n        resize: ({ size }) => this.emit({ type: 'noderesize', data: { id: node.id, size } })\n      }\n    )\n\n    this.nodeViews.set(id, view)\n    this.area.content.add(view.element)\n\n    this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'node', payload: node }\n    })\n\n    return view\n  }\n\n  public removeNodeView(id: NodeId) {\n    const view = this.nodeViews.get(id)\n\n    if (view) {\n      this.emit({ type: 'unmount', data: { element: view.element } })\n      this.nodeViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  public addConnectionView(connection: Schemes['Connection']) {\n    const view = new ConnectionView({\n      contextmenu: event => this.emit({ type: 'contextmenu', data: { event, context: connection } })\n    })\n\n    this.connectionViews.set(connection.id, view)\n    this.area.content.add(view.element)\n\n    this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'connection', payload: connection }\n    })\n\n    return view\n  }\n\n  public removeConnectionView(id: ConnectionId) {\n    const view = this.connectionViews.get(id)\n\n    if (view) {\n      this.emit({ type: 'unmount', data: { element: view.element } })\n      this.connectionViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  /**\n   * Force update rendered element by id (node, connection, etc.)\n   * @param type Element type\n   * @param id Element id\n   * @emits render\n   */\n  public async update(type: GetRenderTypes<Area2D<Schemes>> | GetRenderTypes<ExtraSignals>, id: string) {\n    const data = this.elements.get(type, id)\n\n    if (data) await this.emit({ type: 'render', data } as Area2D<Schemes>)\n  }\n\n  /**\n   * Resize node\n   * @param id Node id\n   * @param width Desired width\n   * @param height Desired height\n   */\n  public async resize(id: NodeId, width: number, height: number) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.resize(width, height)\n  }\n\n  /**\n   * Translate node to position\n   * @param id Node id\n   * @param position Position\n   */\n  public async translate(id: NodeId, { x, y }: Position) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.translate(x, y)\n  }\n\n  /**\n   * Destroy all views and remove all event listeners\n   */\n  public destroy() {\n    this.container.removeEventListener('contextmenu', this.onContextMenu)\n    Array.from(this.connectionViews.keys()).forEach(id => this.removeConnectionView(id))\n    Array.from(this.nodeViews.keys()).forEach(id => this.removeNodeView(id))\n    this.area.destroy()\n  }\n}\n"],"names":["Content","reordered","_classCallCheck","holder","document","createElement","style","transformOrigin","_createClass","key","value","getPointerFrom","event","_this$holder$getBound","getBoundingClientRect","left","top","x","clientX","y","clientY","add","element","appendChild","_reorder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","target","next","wrap","_callee$","_context","prev","contains","Error","insertBefore","stop","reorder","_x","_x2","apply","arguments","remove","removeChild","usePointerListener","handlers","move","up","window","removeEventListener","down","addEventListener","destroy","min","arr","length","Math","_toConsumableArray","max","getBoundingBox","rects","map","rect","position","right","width","bottom","height","abs","center","Drag","guards","_this","_defineProperty","e","stopPropagation","pointerStart","pageX","pageY","startPosition","_objectSpread","config","getCurrentPosition","events","start","preventDefault","delta","zoom","getZoom","translate","drag","pointerType","button","initialize","touchAction","pointerListener","Zoom","intensity","_this$element$getBoun","isNegative","deltaY","ox","oy","onzoom","pointers","push","p","pointerId","isTranslating","_this$element$getBoun2","_this$getTouches","getTouches","cx","cy","distance","previous","filter","_this$element$getBoun3","container","wheel","dblclick","contextmenu","touches","_ref","x1","y1","_ref2","x2","y2","sqrt","pow","Area","k","setPointerFrom","pointerDown","pointer","pointerMove","pointerUp","resize","zoomHandler","source","transform","update","content","setZoomHandler","setDragHandler","pointerdown","pointermove","pointerup","_this$transform","concat","_this2","dragHandler","onTranslate","onZoom","_this$content$getPoin","_translate","result","sent","abrupt","data","translated","_zoom2","_callee2","d","_args2","_callee2$","_context2","undefined","zoomed","_x3","innerHTML","BaseAreaPlugin","_Scope","_inherits","_super","_createSuper","Scope","ConnectionView","ElementsHolder","WeakMap","Map","set","context","type","payload","id","views","viewsElements","get","_delete","_view$payload","view","NodeView","translation","size","el","querySelector","HTMLElement","resized","_x4","picked","dragged","getNodesRect","nodes","node","item","clientWidth","clientHeight","plugin","editor","parentScope","NodeEditor","list","_typeof","getNode","nodeViews","getBBox","simpleNodesOrder","base","area","addPipe","connectionViews","firstChild","restrictor","params","scaling","restrictZoom","restrictPosition","nextPosition","accumulateOnCtrl","pressed","keydown","keyup","active","Selector","isSelected","entity","entities","has","label","accumulate","unselectAll","unselect","Array","from","values","forEach","dx","dy","isPicked","pick","pickId","release","selector","selectableNodes","core","options","getEditor","twitch","selectNode","selected","unselectNode","nodeId","current","pickedId","accumulating","_context$data","select","showInputControl","visible","updateInputControlVisibility","targetInput","input","inputs","showControl","connections","getConnections","hasAnyConnection","Boolean","find","connection","snapGrid","dynamic","snap","round","_view$position","zoomAt","_zoomAt","_ref$scale","scale","boundingBox","w","h","kw","kh","AreaPlugin","_BaseAreaPlugin","call","_assertThisInitialized","emit","overflow","onContextMenu","addNodeView","removeNodeView","addConnectionView","removeConnectionView","elements","_this3","_update","_resize","_x5","_callee3","_ref3","_callee3$","_context3","_x6","_x7","_this4","keys"],"mappings":"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"}